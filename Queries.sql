/*Q1*/
SELECT BIRTHSTATE, count(PLAYERID) AS numPlayers
FROM BASKETBALL_AWARDS_PLAYERS PA JOIN BASKETBALL_MASTER M ON PA.PLAYERID = M.BIOID
WHERE M.BIRTHCOUNTRY = 'USA'
GROUP BY M.BIRTHSTATE
ORDER BY count(PLAYERID) DESC;

/*Q2*/
SELECT *
FROM
	(SELECT name, SUM(HOMEWON) AS homewins, SUM(HOMELOST) AS homelosses, SUM(AWAYWON) AS awaywins, SUM(AWAYLOST) AS awaylosses
	FROM BASKETBALL_TEAMS
	GROUP BY name
	ORDER BY SUM(HOMEWON) DESC)
WHERE rownum <= 15;

/*Q3 */
SELECT "year", LGID, SUM(POINTS) as totalPoints
FROM BASKETBALL_PLAYERS
WHERE "year" >=1967 AND "year" <1976
GROUP BY LGID, "year"
ORDER BY "year";

/*Q4*/
SELECT *
FROM
	(SELECT DRAFTFROM, COUNT(DISTINCT (firstname || ' '|| lastname)) AS numPlayers
	FROM BASKETBALL_DRAFT
	GROUP BY DRAFTFROM
	ORDER BY numPlayers DESC)
WHERE rownum <= 10;


/*Q5*/
SELECT "year", MAX(won-lost) AS winMinusLose
FROM BASKETBALL_COACHES
WHERE "year" <=2010 AND "year" >=2000
GROUP BY "year"
ORDER BY "year";

/*Q6*/
SELECT *
FROM 
	(SELECT name, COUNT(*) AS numHOFPAwardC
	FROM BASKETBALL_HOF H JOIN BASKETBALL_AWARDS_PLAYERS P ON H.hofID=P.playerID
	WHERE CATEGORY='Coach'
	GROUP BY name
	ORDER BY numHOFPAwardC DESC)
	NATURAL FULL OUTER JOIN
	(SELECT name, COUNT(*) AS numHOFCAwardP
	FROM BASKETBALL_HOF H JOIN BASKETBALL_AWARDS_COACHES C ON H.hofID=C.coachID
	WHERE CATEGORY='Player'
	GROUP BY name);

/*Q7*/
SELECT name, COUNT(name) AS numRank1inED
FROM BASKETBALL_TEAMS T JOIN BASKETBALL_ABBREV A ON T.DIVID=A.CODE
WHERE "rank"=1 AND full_name = 'Eastern Division'
GROUP BY NAME
HAVING COUNT(name)>1
ORDER BY numRank1inED DESC;

/*Q8*/
SELECT fullname, COUNT(*) AS numTimesWonFinals
FROM 
	(SELECT DISTINCT (first_name || ' '|| last_name) AS fullname, tmid
	FROM BASKETBALL_PLAYER_ALLSTAR A JOIN BASKETBALL_PLAYERS P ON A.PLAYER_ID=P.PLAYERID
	WHERE A.steals>4) X
	JOIN 
	(SELECT tmIDWinner, "year"
	FROM BASKETBALL_SERIES_POST
	WHERE round='F') Y ON X.tmid=Y.tmIDWinner
GROUP BY fullname
ORDER BY numTimesWonFinals DESC;

/*Q9*/
SELECT "year", CATEGORY, COUNT(CATEGORY) AS NUMHOF
FROM BASKETBALL_HOF
WHERE "year">=1980 AND "year"<=2000
GROUP BY "year", CATEGORY
ORDER BY "year";

/*Q10*/
CREATE VIEW Team2Losers AS
	SELECT S."year", S.SERIES, S.TMIDLOSER
	FROM BASKETBALL_SERIES_POST S JOIN BASKETBALL_TEAMS T ON S.TMIDWINNER=T.TMID
	WHERE name = 'Boston Celtics' AND TMIDLOSER IS NOT NULL
	GROUP BY S."year", S.SERIES, S.TMIDLOSER;

CREATE VIEW Team2Winners AS
	SELECT S."year", S.SERIES, S.TMIDWINNER
	FROM BASKETBALL_SERIES_POST S JOIN BASKETBALL_TEAMS T ON S.TMIDLOSER=T.TMID
	WHERE name = 'Boston Celtics' AND TMIDWINNER IS NOT NULL
	GROUP BY S."year", S.SERIES, S.TMIDWINNER;

SELECT *
FROM 
	(SELECT TMIDLOSER AS team2, COUNT(TMIDLOSER) AS BCWins
	FROM Team2Losers
	GROUP BY TMIDLOSER) X
	FULL OUTER JOIN
	(SELECT TMIDWINNER AS team2, COUNT(TMIDWINNER) AS BCLoses
	FROM Team2Winners
	GROUP BY TMIDWINNER) Y USING(team2);
	
DROP VIEW Team2Winners;
DROP VIEW Team2Losers;

/*Q11*/
SELECT (firstname || ' '|| lastname) AS fullname, numTeamsCoached
FROM 
	(SELECT COACHID, COUNT(TMID) AS numTeamsCoached
	FROM BASKETBALL_COACHES
	GROUP BY COACHID
	HAVING COUNT(TMID)>15) X
	JOIN BASKETBALL_MASTER M ON X.COACHID=M.BIOID
ORDER BY numTeamsCoached DESC;

/*Q12*/
CREATE VIEW MaxPoints40 AS
	SELECT AVG(height) AS avgH, AVG(weight) AS avgW
	FROM
		(SELECT PLAYER_ID, MAX(POINTS) AS MAXPOINTS
		FROM BASKETBALL_PLAYER_ALLSTAR
		GROUP BY PLAYER_ID
		HAVING MAX(POINTS)>30 AND MAX(POINTS)<=40) X
		JOIN BASKETBALL_MASTER M ON X.PLAYER_ID=M.BIOID;

CREATE VIEW MaxPoints30 AS
	SELECT AVG(height) AS avgH, AVG(weight) AS avgW
	FROM
		(SELECT PLAYER_ID, MAX(POINTS) AS MAXPOINTS
		FROM BASKETBALL_PLAYER_ALLSTAR
		GROUP BY PLAYER_ID
		HAVING MAX(POINTS)>20 AND MAX(POINTS)<=30) X
		JOIN BASKETBALL_MASTER M ON X.PLAYER_ID=M.BIOID;

CREATE VIEW MaxPoints20 AS
	SELECT AVG(height) AS avgH, AVG(weight) AS avgW
	FROM
		(SELECT PLAYER_ID, MAX(POINTS) AS MAXPOINTS
		FROM BASKETBALL_PLAYER_ALLSTAR
		GROUP BY PLAYER_ID
		HAVING MAX(POINTS)>10 AND MAX(POINTS)<=20) X
		JOIN BASKETBALL_MASTER M ON X.PLAYER_ID=M.BIOID;
	
CREATE VIEW MaxPoints10 AS
	SELECT AVG(height) AS avgH, AVG(weight) AS avgW
	FROM
		(SELECT PLAYER_ID, MAX(POINTS) AS MAXPOINTS
		FROM BASKETBALL_PLAYER_ALLSTAR
		GROUP BY PLAYER_ID
		HAVING MAX(POINTS)>0 AND MAX(POINTS)<=10) X
		JOIN BASKETBALL_MASTER M ON X.PLAYER_ID=M.BIOID;

SELECT X.avgH AS to10avgH, X.avgW AS to10avgW,  Y.avgH AS to20avgH, Y.avgW AS to20avgW,  Z.avgH AS to30avgH, Z.avgW AS to30avgW,  ZZ.avgH AS to40avgH, ZZ.avgW AS to40avgW
FROM MaxPoints10 X, MaxPoints20 Y, MaxPoints30 Z, MaxPoints40 ZZ;

	
DROP VIEW MaxPoints10;
DROP VIEW MaxPoints20;
DROP VIEW MaxPoints30;
DROP VIEW MaxPoints40;

/*Q13*/
CREATE VIEW teamNumWins AS
	SELECT TMIDWINNER, COUNT(TMIDWINNER) AS numWins
	FROM BASKETBALL_SERIES_POST
	WHERE round='F'
	GROUP BY TMIDWINNER
	ORDER BY numWins DESC;
	
SELECT *
FROM
	(SELECT SUM(numWins) AS totalWins
	FROM teamNumWins)
	NATURAL JOIN
	(SELECT SUM(numWins) AS totalWinsTop5
	FROM
		(SELECT *
		FROM teamNumWins
		WHERE rownum <= 5));

DROP VIEW teamNumWins;

/*Q14*/
CREATE VIEW numTeamsOver5 AS
	SELECT COUNT(*) AS overFiveTeams
	FROM
		(SELECT PLAYERID, COUNT(DISTINCT TMID)
		FROM BASKETBALL_PLAYERS
		GROUP BY PLAYERID
		HAVING COUNT(DISTINCT TMID)>5);
	
CREATE VIEW numTeams2to5 AS
	SELECT COUNT(*) AS twotofiveTeams
	FROM
		(SELECT PLAYERID, COUNT(DISTINCT TMID)
		FROM BASKETBALL_PLAYERS
		GROUP BY PLAYERID
		HAVING COUNT(DISTINCT TMID)>1 AND COUNT(DISTINCT TMID)<=5);

CREATE VIEW numTeams1 AS
	SELECT COUNT(DISTINCT PLAYERID) AS oneTeam
	FROM BASKETBALL_PLAYERS P
	WHERE NOT EXISTS(
		SELECT *
		FROM BASKETBALL_PLAYERS
		WHERE PLAYERID=P.PLAYERID AND TMID<>P.TMID);
	
SELECT *
FROM numTeams1, numTeams2to5, numTeamsOver5;
		
DROP VIEW numTeams1;
DROP VIEW numTeams2to5;
DROP VIEW numTeamsOver5;

/*Q15*/
SELECT "year", LGID, avg(won/lost) AS avgwinloseratio
FROM BASKETBALL_TEAMS
WHERE "year" >=1967 AND "year" <1976
GROUP BY "year", LGID
ORDER BY "year", LGID;
